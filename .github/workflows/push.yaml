# name: Init Rails Microservice

# on: [create]
#   # workflow_dispatch:
#   #   inputs:
#   #     repo_tag:
#   #       description: 'What is the name of your new repository?'
#   #       required: true
#   #       type: string

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
# #         # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - name: Checkout repo 
#       uses: actions/checkout@v3
#     - name: set up git config
#       run: | 
#         git config user.name "Github Actions Bot"
#         git config user.email "<>"
#     - name: Ruby Install
#       uses: ruby/setup-ruby@v1
#       with:
#         bundler-cache: true
#     - name: Rails Install
#       run: gem install rails
#     - name: Generate new Rails project
#       run: |
#         rails new ${{ github.event.repository.name }} --minimal --api d=postgresql
#         git add .
#         git commit -m "initialize repo"
#         git push

# This is a basic workflow to help you get started with Actions

name: Init Project

on: 
  create

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: github.ref == 'refs/heads/main'
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with:
       fetch-depth: 0
       submodules: recursive

    - name: Ruby Install
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    
    - name: Generate project
      run: |
        gem install rails
        rails new . --minimal --api -T --skip-git d=postgresql
    - name: Install Sentry
      run: |
        gem install sentry-ruby
        gem install sentry-rails
    - name: Install Rspec
      run: |
        bundler add rspec-rails --group test
        rails generate rspec:install
    - name: Install Rubocop
      run: |
        bundler add rubocop --group test
        bundler add rubocop-rails --group test
        bundler add rubocop-performance --group test
        bundler add rubocop-rspec --group test
        bundle exec rubocop --auto-gen-config
        bundle exec rubocop -a
    - name: Replace repo name 
      run: grep -rli 'YOUR_REPO_NAME' * | xargs -i@ sed -i "s/YOUR_REPO_NAME/${{ github.event.repository.name }}/g" @
    - name: Git Commit Push Action
      uses: GuillaumeFalourd/git-commit-push@v1.3
